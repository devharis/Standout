@model Supplier
@using SWTS.Models
@{
    ViewBag.Title = "New supplier";
}

<div class="supplier col-xs-8">
    <h2>New supplier</h2>

    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()

        <div class="supplierInfo col-xs-6">
            
            <h4><i class="glyphicon glyphicon-briefcase"></i> Supplier</h4>

            <i>Name @Html.ValidationMessageFor(model => model.Name, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Name, null, new { @class = "form-control", @placeholder = "Name" })
                
            </div>

            <i>Category @Html.ValidationMessageFor(model => model.Category)</i>
            <div class="editor-field">
                @Html.DropDownListFor(m => m.Category, new SelectList(Enum.GetValues(typeof(Category))), new { @class = "form-control" })
            </div>
            
            <h4 class="addressSection"><i class="glyphicon glyphicon-home"></i> Address</h4>
            
            <i>Address @Html.ValidationMessageFor(model => model.Address, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Address, null, new { @class = "form-control geocodeAddress", @placeholder = "Address", required="required" })
            </div>
            
            <i>Post code @Html.ValidationMessageFor(model => model.PostCode, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.PostCode, null, new { @class = "form-control", @placeholder = "Post code" })
            </div>

            <i>City @Html.ValidationMessageFor(model => model.City, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.City, null, new { @class = "form-control geocodeCity", @placeholder = "City" })
            </div>

            <i>Country @Html.ValidationMessageFor(model => model.Country, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Country, null, new { @class = "form-control geocodeCountry", @placeholder = "Country" })     
            </div>
            
            <button type="submit" class="saveSupplierBtn btn btn-sm btn-success"><i class="glyphicon glyphicon-ok-sign"></i> Save supplier</button>  
        </div>
    
    
        <div class="form-group col-xs-6">
            <h4><i class="glyphicon glyphicon-envelope"></i> Contact</h4>

            <i>Email @Html.ValidationMessageFor(model => model.Email, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email" })   
            </div>

            <i>Phone @Html.ValidationMessageFor(model => model.Phone, "- required", new { @class = "redclass" })</i>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Phone, null, new { @class = "form-control", @placeholder = "Phone" })     
            </div>

        </div>
        
        <div class="map col-xs-4">
            <h4><i class="glyphicon glyphicon-map-marker"></i> Map location</h4>
            <div id="map-canvas"></div>
        </div>

        <div class=" editor-field">
            @Html.HiddenFor(model => model.Lat, new { @class = "lat" })
            @Html.HiddenFor(model => model.Lng, new { @class = "lng" })
        </div>
        
    }
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/mapLoader.js"></script>
}